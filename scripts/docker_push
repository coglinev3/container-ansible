#!/usr/bin/env bash

# Logout and login to docker.io
#
# The GitHub user is logged in to docker.io with "docker login" by default and
# must therefore first be logged out with "docker logout" before the GitHub
# user can log in to docker.io with podman.
docker logout
echo "$DOCKER_PASSWORD" | podman login -u "$DOCKER_USERNAME" --password-stdin

# push the image
echo "podman push --format=docker ${CONTAINER_IMAGE_NAMESPACE}/${CONTAINER_IMAGE_NAME}:${CONTAINER_DISTRO}"
podman push --format=docker ${CONTAINER_IMAGE_NAMESPACE}/${CONTAINER_IMAGE_NAME}:${CONTAINER_DISTRO}

# push alternate tag if available
if ! [ -z $CONTAINER_IMAGE_ALTERNATE_TAG ]; then
  echo "podman tag ${CONTAINER_IMAGE_NAMESPACE}/${CONTAINER_IMAGE_NAME}:${CONTAINER_DISTRO} ${CONTAINER_IMAGE_NAMESPACE}/${CONTAINER_IMAGE_NAME}:${CONTAINER_IMAGE_ALTERNATE_TAG}"
  podman tag ${CONTAINER_IMAGE_NAMESPACE}/${CONTAINER_IMAGE_NAME}:${CONTAINER_DISTRO} ${CONTAINER_IMAGE_NAMESPACE}/${CONTAINER_IMAGE_NAME}:${CONTAINER_IMAGE_ALTERNATE_TAG}
  echo "podman push --format=docker ${CONTAINER_IMAGE_NAMESPACE}/${CONTAINER_IMAGE_NAME}:${CONTAINER_IMAGE_ALTERNATE_TAG}"
  podman push --format=docker ${CONTAINER_IMAGE_NAMESPACE}/${CONTAINER_IMAGE_NAME}:${CONTAINER_IMAGE_ALTERNATE_TAG}
fi

# Logout from docker.io
podman logout
