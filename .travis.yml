---
dist: bionic
addons:
  apt:
    packages:
      - docker-ce
      - libssl-dev
      - libffi-dev
      - python3
      - python3-pip
      - python3-setuptools
      - python3-software-properties
      - python3-wheel

language: minimal

services:
  - docker

env:
  global:
    - IMAGE_NAMESPACE: coglinev3
    - BASE_IMAGE_NAME: python
    - IMAGE_NAME: ansible
  matrix:
    - CONTAINER_DISTRO: alpine-3.11
      CONTAINER_CMD: /sbin/init
      IMAGE_ALTERNATE_TAG: latest
    - CONTAINER_DISTRO: alpine-3.10
      CONTAINER_CMD: /sbin/init
    - CONTAINER_DISTRO: alpine-3.9
      CONTAINER_CMD: /sbin/init
    - CONTAINER_DISTRO: centos-7
    - CONTAINER_DISTRO: centos-8
    - CONTAINER_DISTRO: debian-9
      CONTAINER_CMD: /bin/systemd
    - CONTAINER_DISTRO: debian-10
      CONTAINER_CMD: /bin/systemd
    - CONTAINER_DISTRO: ubuntu-16.04
      CONTAINER_CMD: /sbin/init
    - CONTAINER_DISTRO: ubuntu-18.04
      CONTAINER_CMD: /bin/systemd
    - CONTAINER_DISTRO: ubuntu-19.10
      CONTAINER_CMD: /bin/systemd

install:
  # Install Ansible and Python Docker Module
  - pip3 install ansible docker

before_script:
  # Configure Ansible
  - cp .travis/ansible.cfg ~/.ansible.cfg
  - mkdir -p ~/.ansible && cp .travis/hosts ~/.ansible
  # Show Ansible version
  - ansible --version
  # Create roles directory
  - mkdir -p ~/.ansible/roles
  # Install required Ansible Role(s)
  - ansible-galaxy install -r requirements.yml -p ~/.ansible/roles
  # Install Ansible-Bender
  - ansible-playbook .travis/ansible-bender.yml

script:
  # Build image with Ansible-Bender
  - env ANSIBLE_FORCE_COLOR=1 ansible-bender build --no-cache container-ansible.yml

after_success:
  # Start a container from the new created image
  - >
    cid=$(podman run -d --rm --name check_ansible
    ${IMAGE_NAMESPACE}/${IMAGE_NAME}:${CONTAINER_DISTRO})
  # show container os-release
  - podman exec ${cid} env TERM=xterm cat /etc/os-release
  # show container python version
  - podman exec ${cid} -u ansible env TERM=xterm ansible --version
  # Stop the container
  - podman stop ${cid}

#deploy:
#  provider: script
#  script: bash scripts/docker_push
#  cleanup: false
#  on:
#    branch: maste/bin/systemd
